version: "3.8"

services:

  backend:
    depends_on: 
      - db
    build:
      dockerfile: ./Dockerfile
    env_file:
      - ./doc_env/docker.env
    volumes:
      - ./:/app
      - static_volume:/app/static
    command:
      - '/app/entrypoint.sh'

  db:
    image: postgres:15.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes: 
      - db:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/static
    ports:
    - 1337:80
    depends_on:
    - backend
    restart: "on-failure"
  
  redis:
    image: redis:7.0.10-alpine
    expose:
      - 6379
    restart: unless-stopped

  worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - ./doc_env/docker.env
    entrypoint: /app/worker-entrypoint.sh
    volumes:
      - ./:/app
      - static_volume:/app/static
    depends_on:
      - backend
      - redis

volumes:
  db:
  static_volume: